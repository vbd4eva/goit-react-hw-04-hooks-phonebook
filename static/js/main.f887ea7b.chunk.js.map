{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactsBook/ContactsBook.module.css","components/ContactAddingForm/ContactAddingForm.module.css","components/ContactAddingForm/ContactAddingForm.js","components/Notification/Notification.js","components/ContactsBook/ContactsBook.js","components/ContactFilter/ContactFilter.js","components/ContactList/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactListItem/ContactListItem.module.css","components/ContactFilter/ContactFilter.module.css"],"names":["module","exports","ContactAddingForm","onSubmit","useState","name","setName","number","setNumber","stateRange","handleChange","e","currentTarget","value","setState","className","s","form","preventDefault","labelContainer","label","labelText","inputText","type","onChange","required","pattern","placeholder","submitBtn","submitBtn__text","Notification","message","ContactsBook","totalNumber","children","contactsContainer","ContactFilter","setFilter","input","ContactListItem","deleteContact","deleteBtn","onClick","ContactList","contacts","length","list","map","id","item","App","JSON","parse","localStorage","getItem","setContacts","filter","useEffect","setItem","stringify","newContactCart","newContactName","doubleContact","find","toast","onDoubleAddingReaction","newContact","uuidv4","prev","addNewContact","toLocaleLowerCase","includes","contactId","newContactList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f887ea7b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1U1t2\",\"item\":\"ContactList_item__1_xze\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsContainer\":\"ContactsBook_contactsContainer__1QMDD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactAddingForm_form__2hIFf\",\"labelContainer\":\"ContactAddingForm_labelContainer__3BXnA\",\"label\":\"ContactAddingForm_label__1LFNd\",\"labelText\":\"ContactAddingForm_labelText__2ZNdI\",\"inputText\":\"ContactAddingForm_inputText__3EQJL\",\"submitBtn\":\"ContactAddingForm_submitBtn__3wusW\",\"submitBtn__text\":\"ContactAddingForm_submitBtn__text__1IHuW\"};","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './ContactAddingForm.module.css';\r\n\r\nexport default function ContactAddingForm({onSubmit}) { \r\n    \r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const stateRange = {\r\n        name: setName,\r\n        number: setNumber\r\n    }\r\n\r\n    function handleChange(e) {\r\n        const { name, value } = e.currentTarget;\r\n\r\n        const setState = stateRange[name];\r\n        setState(value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onSubmit({name,number});\r\n        reset();\r\n    }\r\n\r\n    function reset() { \r\n        setName('');\r\n        setNumber('');\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <form className={s.form} onSubmit={handleSubmit}>\r\n            <div className={s.labelContainer}>\r\n                <label className={s.label}>\r\n                    <span className={s.labelText}>Name</span>\r\n                    <input\r\n                        className={s.inputText}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </label>\r\n                <label className={s.label}>\r\n                    <span className={s.labelText}>Phone</span>\r\n                    <input\r\n                        className={s.inputText}\r\n                        type=\"tel\"\r\n                        pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\r\n                        name=\"number\"\r\n                        value={number}\r\n                        onChange={handleChange}\r\n                        placeholder=\"067-333-4444\"\r\n                        required\r\n                    />\r\n                </label>\r\n            </div>\r\n      \r\n            <button className={s.submitBtn} type=\"submit\">\r\n                <span className={s.submitBtn__text}>Add contact</span>\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n\r\nContactAddingForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n};","import PropTypes from 'prop-types'\r\n\r\nfunction Notification({message}) {\r\n    return (\r\n        <p className=\"messageNotification\">\r\n            {message}\r\n        </p>\r\n    )\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Notification","import PropTypes from 'prop-types'\r\nimport Notification from '../Notification/Notification'\r\nimport s from './ContactsBook.module.css'\r\n \r\nfunction ContactsBook({totalNumber, children}) {\r\n    return (\r\n        <>\r\n            {(totalNumber > 0)\r\n                ?\r\n            (<>\r\n            <h2>Contacts</h2>\r\n                <div className={s.contactsContainer}>\r\n                    {children}\r\n                </div>\r\n            </>)\r\n                :\r\n            <Notification message=\"PhoneBook is emty\"/>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nContactsBook.propTypes = {\r\n    totalNumber: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default ContactsBook\r\n\r\n","import PropTypes from 'prop-types'\r\nimport s from './ContactFilter.module.css'\r\n\r\nfunction ContactFilter({ value, setFilter }) {\r\n\r\n    const onChange = (e) => {\r\n        setFilter(e.currentTarget.value);\r\n    }\r\n    \r\n\r\n    return (\r\n         <label className={s.label}>\r\n            Find contacts by name\r\n            <input\r\n                className={s.input}\r\n                 type=\"text\"\r\n                 name=\"filter\"\r\n                 value={value}\r\n                 onChange={onChange}\r\n             />\r\n         </label>\r\n    )\r\n}\r\n\r\nContactFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    setFilter: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactFilter\r\n\r\n","import PropTypes from 'prop-types'\r\nimport s from './ContactListItem.module.css'\r\n\r\nfunction ContactListItem({ name, number, deleteContact}) {\r\n    return (\r\n        <>\r\n            <span className={s.name}>{name}</span> : <span className={s.number}>{number}</span> <button className={s.deleteBtn} type=\"button\" onClick={deleteContact} >delete</button>\r\n        </>\r\n    )\r\n}\r\n\r\nContactListItem.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    deleteContact: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactListItem\r\n\r\n","import PropTypes from 'prop-types'\r\nimport ContactListItem from './ContactListItem/ContactListItem'\r\nimport Notification from '../Notification/Notification'\r\nimport s from './ContactList.module.css'\r\n\r\n\r\nfunction ContactList({ contacts, deleteContact }) {\r\n    return (\r\n        (contacts.length > 0)\r\n        ?\r\n        <ul className={s.list}>\r\n            {contacts.map(\r\n                ({ id, name, number }) => \r\n                    (<li key={id} className={s.item}>\r\n                        <ContactListItem\r\n                            name={name}\r\n                            number={number}\r\n                            deleteContact={()=>deleteContact(id)}\r\n                        />\r\n                    </li>)\r\n            )}\r\n        </ul>\r\n        :\r\n        <Notification message=\"is Nothing finded...Try to change request\"/>\r\n            \r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n    }))\r\n}\r\n\r\nexport default ContactList\r\n\r\n","import {useState, useEffect} from 'react'\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport ContactAddingForm from './components/ContactAddingForm/ContactAddingForm';\nimport ContactsBook from './components/ContactsBook/ContactsBook';\nimport ContactFilter from './components/ContactFilter/ContactFilter';\nimport ContactList from './components/ContactList/ContactList';\n\nexport default function App() {\n\n  const [contacts, setContacts] = useState(()=>JSON.parse(  localStorage.getItem('contacts') ) ?? [] );\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n      // console.log('пишет в локал сторадж');\n  }, [contacts]);\n\n\n  const handleContactCart = (newContactCart) =>{   \n    const doubleContact = findInContacts(newContactCart.name);  \n    if (doubleContact) { \n      onDoubleAddingReaction(doubleContact);\n      return\n    }\n    addNewContact(newContactCart);\n  }\n  const getFilteredContacts = () => {\n    return contacts.filter(\n        ({name}) => name.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\n    )\n  };\n  const deleteContact = (contactId) => { \n    const newContactList = contacts.filter(\n      ({id}) =>(id !== contactId)\n      );\n      setContacts( newContactList);\n  }\n\n  return (\n      <>\n        <h1>Phonebook</h1>  \n        <ContactAddingForm onSubmit={handleContactCart} />\n\n        \n            <ContactsBook totalNumber={contacts.length}>\n              <ContactFilter value={filter} setFilter={setFilter} />\n              <ContactList contacts={getFilteredContacts()} deleteContact={deleteContact}/>\n            </ContactsBook>\n        \n        \n        <ToastContainer />\n      </>\n    )\n\n\n  function  addNewContact(newContactCart){\n    const newContact = {id:uuidv4(),...newContactCart};\n    setContacts(prev=>[newContact,...prev]);\n  }\n  function onDoubleAddingReaction(doubleContact) { \n    const { name } = doubleContact; \n    toast(name + ' is already in contacts.');\n    // alert(name + ' is already in contacts.');\n    setFilter(name);\n  }  \n  function findInContacts(newContactName) {\n    return contacts.find(({ name }) => name === newContactName);\n  };\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"ContactListItem_name__1eetg\",\"number\":\"ContactListItem_number__3lW4_\",\"deleteBtn\":\"ContactListItem_deleteBtn__jKUjg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactFilter_label__HjSqO\",\"input\":\"ContactFilter_input__3kxzn\"};"],"sourceRoot":""}